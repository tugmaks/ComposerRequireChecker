<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="6.4.0@04f312ac6ea48ba1c3e5db4d815bf6d74641c0ee">
  <file src="src/ComposerRequireChecker/Cli/CheckCommand.php">
    <MixedArgumentTypeCoercion>
      <code><![CDATA[(new ComposeGenerators())->__invoke(
                        $getAdditionalSourceFiles($options->getScanFiles(), dirname($composerJson)),
                        $getPackageSourceFiles($composerData, dirname($composerJson)),
                        (new LocateComposerPackageDirectDependenciesSourceFiles())->__invoke($composerJson),
                    )]]></code>
      <code><![CDATA[(new ComposeGenerators())->__invoke(
                    $getPackageSourceFiles($composerData, dirname($composerJson)),
                    $getAdditionalSourceFiles($options->getScanFiles(), dirname($composerJson)),
                )]]></code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="src/ComposerRequireChecker/Exception/InvalidInputFile.php">
    <UnusedClass>
      <code><![CDATA[InvalidInputFile]]></code>
    </UnusedClass>
  </file>
  <file src="src/ComposerRequireChecker/NodeVisitor/DefinedSymbolCollector.php">
    <PossiblyUnusedReturnValue>
      <code><![CDATA[Node]]></code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="test/ComposerRequireCheckerTest/ASTLocator/LocateASTFromFilesTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$content]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/ComposerRequireCheckerTest/Cli/OptionsTest.php">
    <MixedArgument>
      <code><![CDATA[json_decode(file_get_contents(
                __DIR__ . '/../../../data/config.dist.json',
            ), true)]]></code>
    </MixedArgument>
  </file>
  <file src="test/ComposerRequireCheckerTest/DefinedSymbolsLocator/LocateDefinedSymbolsFromASTRootsTest.php">
    <InvalidArgument>
      <code><![CDATA[[$roots]]]></code>
      <code><![CDATA[[$roots]]]></code>
      <code><![CDATA[[$roots]]]></code>
      <code><![CDATA[[$roots]]]></code>
      <code><![CDATA[[$roots]]]></code>
      <code><![CDATA[[$roots]]]></code>
      <code><![CDATA[new ArrayObject($roots)]]></code>
    </InvalidArgument>
    <RedundantCondition>
      <code><![CDATA[assertIsArray]]></code>
      <code><![CDATA[assertIsArray]]></code>
      <code><![CDATA[assertIsArray]]></code>
      <code><![CDATA[assertIsArray]]></code>
      <code><![CDATA[assertIsArray]]></code>
      <code><![CDATA[assertIsArray]]></code>
    </RedundantCondition>
  </file>
  <file src="test/ComposerRequireCheckerTest/DefinedSymbolsLocator/LocateDefinedSymbolsFromComposerRuntimeApiTest.php">
    <MixedArgument>
      <code><![CDATA[json_decode($composerJson, true)]]></code>
      <code><![CDATA[json_decode($composerJson, true)]]></code>
    </MixedArgument>
  </file>
  <file src="test/ComposerRequireCheckerTest/DefinedSymbolsLocator/LocateDefinedSymbolsFromExtensionsTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA['ComposerRequireChecker\Exception\UnknownExtension']]></code>
    </ArgumentTypeCoercion>
    <RedundantCondition>
      <code><![CDATA[assertIsArray]]></code>
    </RedundantCondition>
  </file>
  <file src="test/ComposerRequireCheckerTest/FileLocator/LocateAllFilesByExtensionTest.php">
    <MixedArrayAssignment>
      <code><![CDATA[$files[]]]></code>
    </MixedArrayAssignment>
    <PossiblyUndefinedVariable>
      <code><![CDATA[$files]]></code>
    </PossiblyUndefinedVariable>
  </file>
  <file src="test/ComposerRequireCheckerTest/FileLocator/LocateComposerPackageDirectDependenciesSourceFilesTest.php">
    <MixedReturnTypeCoercion>
      <code><![CDATA[iterator_to_array(($this->locator)($composerJson))]]></code>
      <code><![CDATA[string[]]]></code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="test/ComposerRequireCheckerTest/FileLocator/LocateComposerPackageSourceFilesTest.php">
    <InternalClass>
      <code><![CDATA[JsonLoader::getData($composerJson)]]></code>
    </InternalClass>
    <InternalMethod>
      <code><![CDATA[JsonLoader::getData($composerJson)]]></code>
    </InternalMethod>
    <InvalidReturnStatement>
      <code><![CDATA[$files]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[string[]]]></code>
    </InvalidReturnType>
    <MixedArgument>
      <code><![CDATA[$file]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$file]]></code>
    </MixedAssignment>
  </file>
  <file src="test/ComposerRequireCheckerTest/JsonLoaderTest.php">
    <InternalClass>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
    </InternalClass>
    <InternalMethod>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
      <code><![CDATA[JsonLoader::getData($path)]]></code>
    </InternalMethod>
    <InvalidArrayOffset>
      <code><![CDATA[$data['foo']]]></code>
    </InvalidArrayOffset>
  </file>
  <file src="test/ComposerRequireCheckerTest/NodeVisitor/DefinedSymbolCollectorFunctionalTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$className]]></code>
    </ArgumentTypeCoercion>
    <PossiblyNullArgument>
      <code><![CDATA[$this->parser->parse(
            file_get_contents((new ReflectionClass($className))->getFileName()),
        )]]></code>
      <code><![CDATA[$this->parser->parse('<?php ' . $phpSource)]]></code>
    </PossiblyNullArgument>
    <UnusedReturnValue>
      <code><![CDATA[array<Node>]]></code>
      <code><![CDATA[array<Node>]]></code>
    </UnusedReturnValue>
  </file>
  <file src="test/ComposerRequireCheckerTest/NodeVisitor/UsedSymbolCollectorFunctionalTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$className]]></code>
    </ArgumentTypeCoercion>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->traverser->traverse($this->parser->parse($stringAST))]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[array<Stmt>]]></code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[$this->parser->parse($stringAST)]]></code>
    </PossiblyNullArgument>
    <UnusedReturnValue>
      <code><![CDATA[array<Stmt>]]></code>
    </UnusedReturnValue>
  </file>
  <file src="test/ComposerRequireCheckerTest/UsedSymbolsLocator/LocateUsedSymbolsFromASTRootsTest.php">
    <InvalidArgument>
      <code><![CDATA[[$ast1, $ast2]]]></code>
      <code><![CDATA[[[$node]]]]></code>
      <code><![CDATA[new ArrayObject($asts)]]></code>
    </InvalidArgument>
  </file>
</files>
